// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PROG3050_HMJJ.Models.DataAccess;

#nullable disable

namespace PROG3050_HMJJ.Migrations
{
    [DbContext(typeof(GameStoreDbContext))]
    partial class GameStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PROG3050_HMJJ.Areas.Admin.Models.Events", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Date = new DateTime(2021, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A big event in the big city",
                            Location = "The Big City",
                            Name = "The Big Event"
                        },
                        new
                        {
                            ID = 2,
                            Date = new DateTime(2021, 12, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A small event in the small city",
                            Location = "The Small City",
                            Name = "The Small Event"
                        });
                });

            modelBuilder.Entity("PROG3050_HMJJ.Areas.Member.Models.Languages", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "English"
                        },
                        new
                        {
                            ID = 2,
                            Name = "French"
                        },
                        new
                        {
                            ID = 3,
                            Name = "German"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Swedish"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Spanish"
                        },
                        new
                        {
                            ID = 6,
                            Name = "Hindi"
                        },
                        new
                        {
                            ID = 7,
                            Name = "Bengali"
                        },
                        new
                        {
                            ID = 8,
                            Name = "Persian"
                        },
                        new
                        {
                            ID = 9,
                            Name = "Japanese"
                        },
                        new
                        {
                            ID = 10,
                            Name = "Italian"
                        });
                });

            modelBuilder.Entity("PROG3050_HMJJ.Areas.Member.Models.Preferences", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("LanguagesID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LanguagesID");

                    b.ToTable("Preferences");
                });

            modelBuilder.Entity("PROG3050_HMJJ.Areas.Member.Models.Profiles", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RecievePromotions")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("PROG3050_HMJJ.Areas.Member.Models.SelectedGenres", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("GenresID")
                        .HasColumnType("int");

                    b.Property<int>("PreferencesID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GenresID");

                    b.HasIndex("PreferencesID");

                    b.ToTable("SelectedGenres");
                });

            modelBuilder.Entity("PROG3050_HMJJ.Areas.Member.Models.SelectedPlatforms", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("PlatformsID")
                        .HasColumnType("int");

                    b.Property<int>("PreferencesID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PlatformsID");

                    b.HasIndex("PreferencesID");

                    b.ToTable("SelectedPlatforms");
                });

            modelBuilder.Entity("PROG3050_HMJJ.Models.Account.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("PreferencesID")
                        .HasColumnType("int");

                    b.Property<int?>("ProfilesID")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PreferencesID")
                        .IsUnique()
                        .HasFilter("[PreferencesID] IS NOT NULL");

                    b.HasIndex("ProfilesID")
                        .IsUnique()
                        .HasFilter("[ProfilesID] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PROG3050_HMJJ.Models.Games", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenresID")
                        .HasColumnType("int");

                    b.Property<int>("PlatformsID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("GenresID");

                    b.HasIndex("PlatformsID");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("PROG3050_HMJJ.Models.Genres", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Action"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Adventure"
                        },
                        new
                        {
                            ID = 3,
                            Name = "RPG"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Simulation"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Strategy"
                        },
                        new
                        {
                            ID = 6,
                            Name = "Sports"
                        },
                        new
                        {
                            ID = 7,
                            Name = "Puzzle"
                        },
                        new
                        {
                            ID = 8,
                            Name = "Idle"
                        },
                        new
                        {
                            ID = 9,
                            Name = "Casual"
                        });
                });

            modelBuilder.Entity("PROG3050_HMJJ.Models.Platforms", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "PS5"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Xbox"
                        },
                        new
                        {
                            ID = 3,
                            Name = "PC"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Android"
                        },
                        new
                        {
                            ID = 5,
                            Name = "iOS"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PROG3050_HMJJ.Models.Account.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PROG3050_HMJJ.Models.Account.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PROG3050_HMJJ.Models.Account.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PROG3050_HMJJ.Models.Account.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PROG3050_HMJJ.Areas.Member.Models.Preferences", b =>
                {
                    b.HasOne("PROG3050_HMJJ.Areas.Member.Models.Languages", "Languages")
                        .WithMany()
                        .HasForeignKey("LanguagesID");

                    b.Navigation("Languages");
                });

            modelBuilder.Entity("PROG3050_HMJJ.Areas.Member.Models.SelectedGenres", b =>
                {
                    b.HasOne("PROG3050_HMJJ.Models.Genres", "Genres")
                        .WithMany()
                        .HasForeignKey("GenresID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PROG3050_HMJJ.Areas.Member.Models.Preferences", "Preferences")
                        .WithMany()
                        .HasForeignKey("PreferencesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genres");

                    b.Navigation("Preferences");
                });

            modelBuilder.Entity("PROG3050_HMJJ.Areas.Member.Models.SelectedPlatforms", b =>
                {
                    b.HasOne("PROG3050_HMJJ.Models.Platforms", "Platforms")
                        .WithMany()
                        .HasForeignKey("PlatformsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PROG3050_HMJJ.Areas.Member.Models.Preferences", "Preferences")
                        .WithMany()
                        .HasForeignKey("PreferencesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Platforms");

                    b.Navigation("Preferences");
                });

            modelBuilder.Entity("PROG3050_HMJJ.Models.Account.User", b =>
                {
                    b.HasOne("PROG3050_HMJJ.Areas.Member.Models.Preferences", "Preferences")
                        .WithOne("User")
                        .HasForeignKey("PROG3050_HMJJ.Models.Account.User", "PreferencesID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PROG3050_HMJJ.Areas.Member.Models.Profiles", "Profiles")
                        .WithOne("User")
                        .HasForeignKey("PROG3050_HMJJ.Models.Account.User", "ProfilesID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Preferences");

                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("PROG3050_HMJJ.Models.Games", b =>
                {
                    b.HasOne("PROG3050_HMJJ.Models.Genres", "Genres")
                        .WithMany()
                        .HasForeignKey("GenresID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PROG3050_HMJJ.Models.Platforms", "Platforms")
                        .WithMany()
                        .HasForeignKey("PlatformsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genres");

                    b.Navigation("Platforms");
                });

            modelBuilder.Entity("PROG3050_HMJJ.Areas.Member.Models.Preferences", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("PROG3050_HMJJ.Areas.Member.Models.Profiles", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
