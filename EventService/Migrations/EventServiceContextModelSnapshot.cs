// <auto-generated />
using System;
using EventService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventService.Migrations
{
    [DbContext(typeof(EventServiceContext))]
    partial class EventServiceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventService.Models.Event", b =>
                {
                    b.Property<int>("eventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("eventID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("eventID");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            eventID = 1,
                            Date = new DateTime(2021, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A big event in the big city",
                            Location = "The Big City",
                            Name = "The Big Event"
                        },
                        new
                        {
                            eventID = 2,
                            Date = new DateTime(2021, 12, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A small event in the small city",
                            Location = "The Small City",
                            Name = "The Small Event"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
